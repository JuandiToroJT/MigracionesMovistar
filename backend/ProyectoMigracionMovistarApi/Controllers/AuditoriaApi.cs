/*
 * API Migraciones
 *
 * API para el proyecto de migraciones de movistar a tigo o claro
 *
 * OpenAPI spec version: 1.0.0
 * Contact: juand.blandont@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Http.Extensions;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using ProyectoMigracionMovistarApi.Attributes;
using ProyectoMigracionMovistarApi.Bussines;
using ProyectoMigracionMovistarApi.Entities;
using ProyectoMigracionMovistarApi.Models;
using ProyectoMigracionMovistarApi.Utils;
using Swashbuckle.AspNetCore.Annotations;
using System.ComponentModel.DataAnnotations;
using System.Threading.Tasks;

namespace ProyectoMigracionMovistarApi.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AuditoriaApi : APIUtil
    {
        private readonly IDbContextFactory<MigracionDbContext> _dbContextFactory;
        public AuditoriaApi(IDbContextFactory<MigracionDbContext> dbContextFactory, IConfiguration configuration)
        {
            _dbContextFactory = dbContextFactory;
        }

        /// <summary>
        /// Obtiene el registro de auditoria del administrador
        /// </summary>
        /// <remarks>Retorna todos los registros de auditoria del administrador. </remarks>
        /// <param name="usuario">Identificación del administrador</param>
        /// <response code="200">Lista de auditoria</response>
        /// <response code="400">Error al recuperar la información</response>
        [HttpGet]
        [Route("auditoria/{usuario}")]
        [ValidateModelState]
        [SwaggerOperation("ObtenerAuditoria")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<AuditoriaItem>), description: "Lista de auditoria")]
        [SwaggerResponse(statusCode: 400, type: typeof(MensajeErrorItem), description: "Error al recuperar la información")]
        public virtual IActionResult ObtenerAuditoria([FromRoute][Required] string usuario)
        {
            try
            {
                AuditoriaBL reglasNegocio = new AuditoriaBL(_dbContextFactory);
                List<AuditoriaItem> respuesta = reglasNegocio.ObtenerAuditoria(usuario);
                return new ObjectResult(respuesta);
            }
            catch (Exception ex)
            {
                return BadRequest(AdministrarExcepcion(ex));
            }
        }
    }
}
